knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = 'E:/courses/modern data mining/hw/Homework 1')
library(data.table)
library(tidyverse)
library(ggplot2)
talkdata = fread("data/Survey_results_final.csv")
View(talkdata)
View(talkdata)
View(talkdata)
talkdata$Answer.Education
talkdata = fread("data/Survey_results_final.csv", coding = "UTF-8")
talkdata = fread("data/Survey_results_final.csv", encoding = "UTF-8")
View(talkdata)
talkdata$Answer.Education
talkdata.selected =
talkdata[,.(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome,
sirius = Answer.SiriusRatio, wharton = Answer.WhartonRatio, worktime = WorkTimeInSeconds)]
talkdata.selected =
talkdata[,.(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome,
sirius = Answer.SiriusRadio, wharton = Answer.WhartonRadio, worktime = WorkTimeInSeconds)]
talkdata.selected =
talkdata[,.(age = Answer.Age, gender = Answer.Gender, education = Answer.Education, income = Answer.HouseHoldIncome,
sirius = `Answer.Sirius Radio`, wharton = `Answer.Wharton Radio`, worktime = WorkTimeInSeconds)]
View(talkdata.selected)
hist(talkdata.selected[,age])
hist(talkdata.selected$age)
typeof(talkdata.selected[,worktime])
typeof(talkdata.selected[,age])
# detect suspect observations
ggplot(talkdata.selected)+
geom_histogram(aes(x=age))
# detect suspect observations
ggplot(talkdata.selected,aes(x=age))+
geom_histogram()
View(talkdata.selected)
# detect suspect observations
ggplot()+
geom_histogram(talkdata.selected,aes(x=age))
# detect suspect observations
ggplot(data = talkdata.selected,mapping = aes(x=age))+
geom_histogram()
typeof(talkdata.selected$age)
talkdata.selected =
talkdata[,.(age = as.numeric(Answer.Age), # The original type of Answer.Age is character
gender = Answer.Gender,
education = Answer.Education,
income = Answer.HouseHoldIncome,
sirius = `Answer.Sirius Radio`,
wharton = `Answer.Wharton Radio`,
worktime = WorkTimeInSeconds)]
# detect suspect observations
ggplot(data = talkdata.selected,mapping = aes(x=age))+
geom_histogram()
# detect suspect observations
ggplot(data = talkdata.selected,mapping = aes(x=age))+
geom_histogram()
summary(talkdata.selected$age)
View(talkdata)
talkdata.selected =
talkdata[,.(age = Answer.Age, # Note: some answers in Age are not numerics
gender = Answer.Gender,
education = Answer.Education,
income = Answer.HouseHoldIncome,
sirius = `Answer.Sirius Radio`,
wharton = `Answer.Wharton Radio`,
worktime = WorkTimeInSeconds)]
# detect suspect observations
talkdata.selected$age
# detect suspect observations
talkdata.selected[age %notin% as.character(5:100)]
# detect suspect observations
talkdata.selected[age %not in% as.character(5:100)]
# detect suspect observations
talkdata.selected[!age %in% as.character(5:100)]
# detect suspect observations
talkdata.selected[!age %in% as.character(10:100)]
# detect suspect observations
talkdata.selected[!age %in% as.character(15:100)]
# detect suspect observations
talkdata.selected[!age %in% as.character(10:100)]
talkdata.selected[age == "Eighteen(18)", age == "18"] # imputation
talkdata.selected[age == "27`", age =="27"] # imputation
talkdata.selected[age == "Eighteen(18)", age = "18"] # imputation
# detect suspect observations
talkdata.selected[!age %in% as.character(10:100)]
talkdata.selected[age == "Eighteen (18)", age = "18"] # imputation
talkdata.selected[age == "Eighteen (18)", age := "18"] # imputation
talkdata.selected[age == "27`", age := "27"] # imputation
# detect suspect observations
talkdata.selected[!age %in% as.character(10:100)]
talkdata.selected[age %in% as.character(10:100), age := as.numeric(age)]
# detect suspect observations
talkdata.selected[!age %in% as.character(10:100)]
View(talkdata.selected)
nrow(talkdata.selected)
talkdata.selected = talkdata.selected[age %in% as.character(10:100), age := as.numeric(age)]
View(talkdata.selected)
# detect suspect observations
talkdata.selected[!age %in% as.character(10:100)]
talkdata.selected = talkdata.selected[age %in% as.character(10:100), age := as.numeric(age)]
nrow(talkdata.selected)
talkdata.selected$age %in% 10:100
talkdata.selected[age %in% 10:100]
typeof(talkdata.selected$age)
talkdata.selected$age
talkdata.selected[age %in% 10:100]
# detect suspect observations
talkdata.selected[!age %in% 10:100]
talkdata.selected = talkdata.selected[age %in% 10:100, age := as.numeric(age)]
View(talkdata.selected)
a = talkdata.selected[age %in% 10:100, age := as.numeric(age)]
View(a)
a = talkdata.selected[age %in% 10:100]
talkedata.selected = talkdata.selected[age %in% 10:100]
talkdata.selected = talkdata.selected[age %in% 10:100]
rm(talkedata.selected)
ggplot(talkdata.selected,aes(x=age))+
geom_histogram()
talkdata.selected[,age := as.numeric(age)]
ggplot(talkdata.selected,aes(x=age))+
geom_histogram()
View(talkdata.selected)
## gender
typeof(talkdata.selected$gender)
## gender
summary(talkdata.selected$gender)
## gender
unique(talkdata.selected$gender)
## gender
talkdata.selected[!gender %in% c("Male","Female")]
talkdata.selected = talkdata.selected[gender %in% c("Male","Female")]
View(talkdata.selected)
## income
unique(talkdata.selected$income)
is.na(talkdata.selected)
talkdata.selected[is.na(talkdata.selected)]
a = is.na(talkdata.selected)
sum(a)
is.na(talkdata.selected$sirius)
which(is.na(talkdata.selected$sirius))
which(is.na(talkdata.selected$wharton))
which(is.na(talkdata.selected$income))
which(is.na(talkdata$income))
talkdata.selected[income == ""]
## sirius
unique(talkdata.selected$sirius)
## wharton
unique(talkdata.selected$wharton)
## worktime
unique(talkdata.selected$worktime)
unique(talkdata.selected$gender)
talkdata.selected[!gender %in% c("Male","Female")]
talkdata.selected = talkdata.selected[gender == ""] # delete blanks
## income
unique(talkdata.selected$income)
talkdata.selected = talkdata.selected[income == ""] # delete blanks
## sirius
unique(talkdata.selected$sirius)
talkdata.selected = talkdata.selected[sirius == ""] # delete blanks
## wharton
unique(talkdata.selected$wharton)
talkdata.selected = talkdata.selected[wharton == ""] # delete blanks
View(talkdata.selected)
talkdata.selected =
talkdata[,.(age = Answer.Age, # Note: some answers in Age are not numerics. Therefore, typeof Answer.Age is character.
gender = Answer.Gender,
education = Answer.Education,
income = Answer.HouseHoldIncome,
sirius = `Answer.Sirius Radio`,
wharton = `Answer.Wharton Radio`,
worktime = WorkTimeInSeconds)]
# detect suspect observations
## age
talkdata.selected[!age %in% 10:100] # automatic type coersion when matching
talkdata.selected[age == "Eighteen (18)", age := "18"] # imputation
talkdata.selected[age == "27`", age := "27"] # imputation
talkdata.selected = talkdata.selected[age %in% 10:100] # delete NAs
talkdata.selected[,age := as.numeric(age)]
## gender
unique(talkdata.selected$gender)
talkdata.selected[!gender %in% c("Male","Female")]
talkdata.selected = talkdata.selected[gender != ""] # delete blanks
## income
unique(talkdata.selected$income)
talkdata.selected = talkdata.selected[income != ""] # delete blanks
## sirius
unique(talkdata.selected$sirius)
talkdata.selected = talkdata.selected[sirius != ""] # delete blanks
## wharton
unique(talkdata.selected$wharton)
talkdata.selected = talkdata.selected[wharton != ""] # delete blanks
View(talkdata.selected)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = 'E:/courses/modern data mining/hw/Homework 1')
library(data.table)
library(tidyverse)
library(ggplot2)
## education
unique(talkdata.selected$education)
talkdata.selected[education == "select one"]
talkdata.selected[education == "Other"]
unique(talkdata[education])
unique(talkdata[,education])
unique(talkdata[,Answer.Education])
View(talkdata)
talkdata.selected[education != c("Other","Select one")] # delete because they are meaningless
View(talkdata.selected)
## education
unique(talkdata.selected$education)
talkdata.selected = talkdata.selected[education != c("Other","Select one")] # delete because they are meaningless
## education
unique(talkdata.selected$education)
talkdata.selected = talkdata.selected[!education %in% c("Other","Select one")] # delete because they are meaningless
## education
unique(talkdata.selected$education)
talkdata.selected = talkdata.selected[!education %in% c("Other","select one")] # delete because they are meaningless
## education
unique(talkdata.selected$education)
